@page "/books/"
@attribute [Authorize]
@inject IStringLocalizer<BooksRepository> localizer;
@inject IBookRepository _books;
<div class="card-header">
    <h3 class="card-header">@localizer["List of books"]</h3>
</div>
<div class="card-body">

    <AuthorizeView Policy="elementsCreation">
        <a href="/books/create" class="btn btn-success">
            <span class="oi oi-plus">@localizer["Add new book"]</span>
        </a>
    </AuthorizeView>
    @if (Model != null)
    {
        if (Model.Count() == 0)
        {
            <Loading Title="@localizer["List of books is empty"]" />
        }
        else
        {

            <table class="table table-responsive">
                <thead>
                    <tr>
                        <th></th>
                        <td>@localizer["Title"]</td>
                        <td>@localizer["Isbn"]</td>
                        <td>@localizer["Price"]</td>
                        <td>@localizer["Author(s)"]</td>
                        <td>@localizer["Actions"]</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in Model)
                    {
                        <tr>
                            <td><img src="@book.Thumbnail" class="bookIcon" alt="@book.Title" /></td>
                            <td>@book.Title</td>
                            <td>@book.Isbn</td>
                            <td>@String.Format("{0:C}", book.Price)</td>
                            <td>
                                <ul class="list-unstyled">
                                    @foreach (var author in book.Authors)
                                    {
                                        <li>@author.Lastname @author.Firstname</li>
                                    }
                                </ul>
                            </td>
                            <td>
                                <a href="/books/view/@book.Id" class="btn btn-primary">
                                    <span class="oi oi-pencil" /> @localizer["View"]
                                </a>
                                <AuthorizeView Policy="elementsEdition">
                                    <a href="/books/edit/@book.Id" class="btn btn-warning">
                                        <span class="oi oi-pencil" /> @localizer["Edit"]
                                    </a>
                                </AuthorizeView>
                                <AuthorizeView Policy="elementsDeleting">
                                    <a href="/books/delete/@book.Id" class="btn btn-danger">
                                        <span class="oi oi-trash" /> @localizer["Delete"]
                                    </a>
                                </AuthorizeView>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        }
    }
    else
    {
        <Loading Title="@localizer["Loading books"]" />
    }
</div>
<div class="card-footer">
    <a href="/" class="btn btn-primary"><span class="oi oi-media-skip-backward" />@localizer["Home"]</a>
</div>

@code {
    IEnumerable<Book> Model;

    protected override async Task OnInitializedAsync()
    {

        Model = await _books.Get();
        await base.OnInitializedAsync();
    }
}
